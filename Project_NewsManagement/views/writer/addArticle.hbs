{{#section 'css'}}
    <link rel="stylesheet" href="/css/styleEdit.css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/css/fileinput.min.css" media="all"
  rel="stylesheet" type="text/css" />
{{/section}}

{{#section 'js'}}
    <script
        src="https://cloud.tinymce.com/5/tinymce.min.js?apiKey=zgpm647r7jby4sry88ekyjf09c4z8ww0asa76ofhwzzu036x"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/js/fileinput.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-fileinput/5.0.3/themes/fa/theme.min.js"></script>
    <script>
    $(function () {

        $('#avaArt').fileinput({
        theme: 'fa',
        dropZoneEnabled: false,
        allowedFileExtensions: ['png', 'jpg', 'gif'],
        uploadClass: 'btn btn-success',
        uploadUrl: '/upload',
        uploadAsync: false,
        });

        tinymce.init({
        selector: '#Content',
        menubar: false,
        height: 600,
        plugins: 'paste image code link autolink lists table media',
        toolbar: [
            'undo redo | bold italic underline strikethrough | numlist bullist | alignleft aligncenter alignright',
            'forecolor backcolor',
            'table link image code media',
            // 'paste'
        ],
        image_caption: true,
        
        // enable automatic uploads of images represented by blob or data URIs
        automatic_uploads: true,
        // add custom filepicker only to Image dialog
        file_picker_types: 'image',
        file_picker_callback: function(cb, value, meta) {   
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');

            input.onchange = function() {
            var file = this.files[0];
            var reader = new FileReader();
            
            reader.onload = function () {
                var id = 'blobid'
                var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                var base64 = reader.result.split(',')[1];
                var blobInfo = blobCache.create(id, file, base64);
                blobCache.add(blobInfo);

                // call the callback and populate the Title field with the file name
                cb(blobInfo.blobUri(), { title: file.name });
            };
            reader.readAsDataURL(file);
            };
            
            input.click();
        }

        });
    })
    </script>
    <script>
        $(document).on("keypress", "form", function(event) { 
            return event.keyCode != 13;
        });
    </script>     

        

        {{!-- const tagContainer = document.querySelector('.tag-container');
        const input = document.querySelector('.tag-container input');

        var tags = [];  

        function createTag(label) {
        const div = document.createElement('div');
        div.setAttribute('class', 'tag');
        const span = document.createElement('span');
        span.innerHTML = label;
        const closeIcon = document.createElement('i');
        closeIcon.innerHTML = 'x';
        closeIcon.setAttribute('class', 'material-icons');
        closeIcon.setAttribute('data-item', label);
        div.appendChild(span);
        div.appendChild(closeIcon);
        return div;
        }

        function clearTags() {
        document.querySelectorAll('.tag').forEach(tag => {
            tag.parentElement.removeChild(tag);
        });
        }

        function addTags() {
        clearTags();
        //slice().reverse(): new tag at the end
        tags.slice().reverse().forEach(tag => {
            tagContainer.prepend(createTag(tag));

        });
        }
        input.addEventListener('keyup', (e) => {
            if (e.key === 'Enter') {
            e.target.value.split(',').forEach(tag => {
                tags.push(tag);     
            });
            addTags();
            document.getElementById("Summary").innerHTML = JSON.stringify(tags[1]);
            input.value = '';
            }
        });

        document.addEventListener('click', (e) => {
        console.log(e.target.tagName);
        if (e.target.tagName === 'I') {
            const tagLabel = e.target.getAttribute('data-item');
            const index = tags.indexOf(tagLabel);
            tags = [...tags.slice(0, index), ...tags.slice(index+1)];
            addTags();    
        }
        })
        
        input.focus(); --}}
{{/section}}

<form class="mr-3 ml-3" action=""  method="POST">
        <div class="form-group row">
            <label for="categories" class="col-sm-2 col-form-label">Chuyên mục</label>
            <div class="col-sm-10">
                <select class="form-control" name="CatID">`
                    {{#each this.lcCategory}}
                        <option value={{CatID}}>{{CatName}}</option>
                    {{/each}}
                </select>
            </div>
        </div>
        <div class="form-group row">
            <label for="title" class="col-sm-2 col-form-label">Tiêu đề</label>
            <div class="col-sm-10">
                <input type="text"  class="form-control" id="ArtTitle" name="ArtTitle">
            </div>
        </div>
        
        <div class="form-group row">
            <label for="summary" class="col-sm-2 col-form-label">Tóm tắt</label>
            <div class="col-sm-10">
                <textarea id="Summary" name="Summary" class="form-control"></textarea>
            </div>
        </div>
        <div class="form-group row">
            <label for="tag" class="col-sm-2 col-form-label">Nhãn bài</label>
            <div class="col-sm-10">
                <div class="tag-container">
                    <input placeholder="Enter tags..." name="TagName" id="TagID">
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label for="tag" class="col-sm-2 col-form-label">Ảnh đại diện bài viết</label>
            <div class="col-sm-10">
                <div class="file-loading">
                    <input id="avaArt" name="avaArt" type="file" >
                </div>
            </div>
        </div>
        <div class="form-group row">
            <label for="Content" class="col-sm-2 col-form-label">Nội dung</label>
        </div>
        <div class="form-group row">
            <div class="col-sm-12">
                <textarea  name="Content"  class="w-100" id="Content"></textarea>
            </div>
        </div>
        {{!-- <script>
            CKEDITOR.replace("Content",{
                "extraPlugins" : 'imagebrowser',
		        "imageBrowser_listUrl" : "/files",
            });
        </script> --}}
         {{#with user}}
            <input value={{WriterID}} name="WriterID" hidden>
        {{/with}}
        <div class="form-group row float-right mr-3">
            <button type="submit" class="btn btn-success float-right" >Lưu bài viết</button>
        </div>
        
    </form>